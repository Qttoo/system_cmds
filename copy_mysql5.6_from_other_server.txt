we already install mysql server and client in Server A(192.168.1.2) 
if you want it to run in Server B and don't want to install it again in Server B 
Then we can copy mysql from Server A to Server B(192.168.1.5)

first of all excute  " ssh-copy-id 192.168.1.2 " in Server B, after this command , we can do the copy job more convenient
we do the step follows in Server B 

1. > rsync -avl 192.168.1.2:/usr/bin/my* /usr/bin
#do not use mysql* include my* , because we need /usr/bin/my_print_defaults, and if you use mysql* , 
#then my_print_defaults is missed

2. > rsync -avl  192.168.1.2:/usr/share/mysql  /usr/share/
#mind that there is no slash after "mysql" , because we want rsync to build the mysql directory automatically

3. > rsync -avl 192.168.1.2:/etc/my.cnf  /etc/

4. > rsync -avl 192.168.1.2:/usr/sbin/mysqld /usr/sbin/
#if you notice that mysqld is not in the same directory with mysql , which is in /usr/bin
#then you will not go the same detours that I have walkd through

5. > rsync -alv 192.168.1.2:/usr/lib/systemd/system/mysqld.service  /usr/lib/systemd/system/
#we want this file because we want to use command :  systemctl start/stop/restart mysqld 
#what's inside mysqld.service is in the tail of this document

6. > useradd mysql -s /sbin/nologin
#create user "mysql"

7. > mkdir /var/lib/mysql
8. > mkdir /var/lib/mysql-files
9. > touch /var/log/mysqld.log
10. > chown mysql.mysql /var/lib/mysql
11. > chown mysql.mysql /var/lib/mysql-files
12. > chown mysql.mysql /var/log/mysqld.log
13. > mkdir /var/run/mysqld/
14. > chown mysql.mysql /var/run/mysqld/
#/var/lib/mysql is the data dir of mysql that set in /etc/my.cnf , also mysqld.log 
#/var/run/mysqld/ is for mysql.pid that set in /etc/my.cnf , if you make the different 

before we exec mysql_install_db , perl-Module is needed 
>>yum install -y perl-Module-Install.noarch
13. > /usr/bin/mysql_install_db --basedir=/usr --defaults-file=/etc/my.cnf --user=mysql


14. > systemctl daemon-reload
#this step makes system know mysqld service we create in step 5

15. > systemctl start mysqld 

seems like that everything is in the right way , if somethins is wrong when you start mysqld daemon , 
journalctl -xe is a very good command for you to find out what's the problem , 
also the error log of mysql is very usefully , which could not be ignored.

#########################
安装数据库的时候报错：
/usr/bin/mysql_install_db --basedir=/usr --defaults-file=/etc/my.cnf --user=mysql --force
Installing MySQL system tables...2018-09-17 03:29:50 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
2018-09-17 03:29:50 0 [Note] Ignoring --secure-file-priv value as server is running with --bootstrap.
2018-09-17 03:29:50 0 [Note] /usr/sbin/mysqld (mysqld 5.6.40-log) starting as process 9836 ...
2018-09-17 03:29:50 9836 [ERROR] Can't read from messagefile '/usr/share/mysql/english/errmsg.sys'
2018-09-17 03:29:50 9836 [Note] InnoDB: Using atomics to ref count buffer pool pages

启动报错：
2018-09-17 04:43:48 0 [Note] /usr/sbin/mysqld (mysqld 5.6.40-log) starting as process 29005 ...
2018-09-17 04:43:48 29005 [ERROR] Can't read from messagefile '/usr/share/mysql/english/errmsg.sys'
2018-09-17 04:43:48 29005 [Warning] Buffered warning: Changed limits: max_open_files: 1024 (requested 5010)

2018-09-17 04:53:49 31202 [Note] Plugin 'FEDERATED' is disabled.
/usr/sbin/mysqld: Table 'mysql.plugin' doesn't exist
2018-09-17 04:53:49 31202 [ERROR] Can't open the mysql.plugin table. Please run mysql_upgrade to create it.
2018-09-17 04:53:49 31202 [Note] InnoDB: Using atomics to ref count buffer pool pages

上面两个错都是因为安装(初始化)数据库的时候，不知道为啥/var/lib/mysql/mysql下面什么文件都没有
从别的机器把这个目录下面的文件全部同步过来即可

**********************
> cat /usr/lib/systemd/system/mysqld.service
#
# Simple MySQL systemd service file
#
# systemd supports lots of fancy features, look here (and linked docs) for a full list:
#   http://www.freedesktop.org/software/systemd/man/systemd.exec.html
#
# Note: this file ( /usr/lib/systemd/system/mysql.service )
# will be overwritten on package upgrade, please copy the file to
#
#  /etc/systemd/system/mysql.service
#
# to make needed changes.
#
# systemd-delta can be used to check differences between the two mysql.service files.
#

[Unit]
Description=MySQL Community Server
After=network.target
After=syslog.target

[Install]
WantedBy=multi-user.target
Alias=mysql.service

[Service]
User=mysql
Group=mysql

# Execute pre and post scripts as root
PermissionsStartOnly=true

# Needed to create system tables etc.
ExecStartPre=/usr/bin/mysql-systemd-start pre

# Start main service
ExecStart=/usr/bin/mysqld_safe --basedir=/usr

# Don't signal startup success before a ping works
ExecStartPost=/usr/bin/mysql-systemd-start post

# Give up if ping don't get an answer
TimeoutSec=600

Restart=always
PrivateTmp=false

> cat /etc/my.cnf
[mysqld]
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
sync_binlog = 1
log-bin-trust-function-creators=1
log_bin = mysql-bin
symbolic-links=0

sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES

[mysqld_safe]
log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid


I do the test in :
Mysql version : mysql  Ver 14.14 Distrib 5.6.40 
Server version : CentOS Linux release 7.5.1804 (Core)

**************************************************************
mariadb 安装好如果修改了root密码不生效，或者修改不了密码，用下面的命令
>UPDATE mysql.user SET authentication_string = PASSWORD('new-password'), plugin = 'mysql_native_password' WHERE User = 'root' AND Host = 'localhost';



